name: Run Tonomy-ID-SDK Tests

on: push

env:
  NODE_VERSION: 22.3.0
  # change git branches, if needed for temporary CI testing
  GIT_BRANCH_COMMUNICATION: feature/swap-service
  GIT_BRANCH_ETHEREUM: master
  GIT_BRANCH_CONTRACTS: feature/bridge-functions

jobs:
  test:
    name: Run lint and unit tests
    needs: compile-contracts
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Delete Tonomy-Contracts directory
        run: rm -rf ./Tonomy-Contracts

      - name: Get Tonomy-Contracts directory from artifacts
        uses: actions/download-artifact@v4
        with:
          name: Tonomy-Contracts
          path: ./Tonomy-Contracts

      - name: Enable Corepack before setting up Node
        run: corepack enable

      - name: Run lint and test
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn install --immutable
      - run: yarn run build
      - run: yarn run typeCheck
      - run: yarn run lint
      - run: yarn run test:unit

  compile-contracts:
    name: Compiles contracts
    runs-on: ubuntu-24.04
    container: tonomy/antelope
    env:
      BUILD_TEST: true
    steps:
      - uses: actions/checkout@v4
        with:
          repository: Tonomy-Foundation/Tonomy-Contracts
          ref: ${{ env.GIT_BRANCH_CONTRACTS }}
          path: Tonomy-Contracts

      - name: Build demo.tmy contract
        run: ./Tonomy-Contracts/contracts/demo.tmy/build.sh local

      - name: Compile eosio.bios
        run: ./Tonomy-Contracts/contracts/eosio.bios/build.sh local

      - name: Compile eosio.msig
        run: ./Tonomy-Contracts/contracts/eosio.msig/build.sh local

      - name: Build eosio.token contract
        run: ./Tonomy-Contracts/contracts/eosio.token/build.sh local

      - name: Build eosio.tonomy contract
        run: ./Tonomy-Contracts/contracts/eosio.tonomy/build.sh local

      - name: Build tonomy contract
        run: ./Tonomy-Contracts/contracts/tonomy/build.sh local

      - name: Build vesting.tmy contract
        run: ./Tonomy-Contracts/contracts/vesting.tmy/build.sh local

      - name: Build staking.tmy contract
        run: ./Tonomy-Contracts/contracts/staking.tmy/build.sh local

      - name: Add Tonomy-Contracts dir to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Tonomy-Contracts
          path: ./Tonomy-Contracts

  integration-test:
    name: Run integration and governance tests
    needs: compile-contracts
    runs-on: ubuntu-latest
    env:
      TONOMY_OPS_PRIVATE_KEY: PVT_K1_24kG9VcMk3VkkgY4hh42X262AWV18YcPjBTd2Hox4YWoP8vRTU
      TONOMY_BOARD_PUBLIC_KEYS: '{"keys":["PUB_K1_81aU18Y3RdyFf2WY4Wy7g7fvG9M9d7hmY4rhNFeXouYYPjExua","PUB_K1_5HWprCobEy8LiYUpfVmh8BdGDb8ANPc8rhBhtNqhvXnuxpyCaq","PUB_K1_5VLYVhqfe7oh8TW2i6Nw251wbpoZ4p15DV7udqDjiaKnryx9YU"]}'
      TONOMY_TEST_ACCOUNTS_PASSPHRASE: "above day fever lemon piano sport"
      ETHEREUM_PRIVATE_KEY: "0xdf57089febbacf7ba0bc227dafbffa9fc08a93fdc68e1e42411a14efcf23656e"
    services:
      blockchain:
        image: tonomy/blockchain:initialized-development
        ports:
          - 8888:8888

    steps:
      - uses: actions/checkout@v4

      - name: Delete Tonomy-Contracts directory
        run: rm -rf ./Tonomy-Contracts

      - name: Get Tonomy-Contracts directory from artifacts
        uses: actions/download-artifact@v4
        with:
          name: Tonomy-Contracts
          path: ./Tonomy-Contracts

      - name: Enable Corepack before setting up Node
        run: corepack enable
      
      - name: Install and build SDK
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn install --immutable
      - run: yarn run build
      
      - name: Run communication service
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: git submodule update --init Tonomy-Communication
      - run: cd Tonomy-Communication && git checkout $GIT_BRANCH_COMMUNICATION && git pull && yarn install --immutable
      - run: cd Tonomy-Communication && yarn link ../ && yarn run build
      # - run: timeout 10s bash -c "cd Tonomy-Communication && yarn run start:prod"
      - run: cd Tonomy-Communication && BLOCKCHAIN_URL=http://localhost:8888 npx pm2 start --interpreter /bin/bash yarn --name "communication" -- run start:prod
      - run: cd Tonomy-Communication && npx pm2 logs --lines 50 --nostream micro

      - name: Run hardhat node and Deploy Ethereum contracts
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: git submodule update --init Ethereum-token
      - run: cd Ethereum-token && git checkout $GIT_BRANCH_ETHEREUM && git pull && yarn install --immutable
      - run: cd Ethereum-token && npx pm2 start --interpreter /bin/bash yarn --name "hardhat" -- run node
      - run: cd Ethereum-token && npx pm2 logs --lines 50 --nostream hardhat
      - run: sleep 5
      - run: |
          cd Ethereum-token
          DEPLOY_OUTPUT=$(yarn run deploy)
          echo "$DEPLOY_OUTPUT"
          BASE_TOKEN_ADDRESS=$(echo "$DEPLOY_OUTPUT" | grep "Proxy contract:" | awk '{print $3}')
          echo "Base Token Address: $BASE_TOKEN_ADDRESS"
          echo "BASE_TOKEN_ADDRESS=$BASE_TOKEN_ADDRESS" >> $GITHUB_ENV

      - name: Bootstrap blockchain
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn run cli bootstrap

      - name: Run integration and governance tests
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn run test:integration
      - run: yarn run test:governance