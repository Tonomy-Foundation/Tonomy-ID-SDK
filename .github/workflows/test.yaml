name: Run Tonomy-ID-SDK Tests

on: push

env:
  NODE_VERSION: 22.3.0
  # change git branches, if needed for temporary CI testing
  GIT_BRANCH_COMMUNICATION: feature/transaction-finalization
  GIT_BRANCH_ETHEREUM: development

jobs:
  compile-contracts:
    uses: ./.github/workflows/compile-contracts.yml
    
  test:
    name: Run lint and unit tests
    needs: compile-contracts
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Delete Tonomy-Contracts directory
        run: rm -rf ./Tonomy-Contracts

      - name: Get Tonomy-Contracts directory from artifacts
        uses: actions/download-artifact@v4
        with:
          name: Tonomy-Contracts
          path: ./Tonomy-Contracts

      - name: Enable Corepack before setting up Node
        run: corepack enable

      - name: Run lint and test
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn install --immutable
      - run: yarn run build
      - run: yarn run typeCheck
      - run: yarn run lint
      - run: yarn run test:unit

  build-communication-container:
    needs: compile-contracts
    name: Build Communication Container
    runs-on: ubuntu-latest
    env:
      # update ref to change communication branch, if needed for temporary CI testing
      GIT_BRANCH: development
    steps:
      - uses: actions/checkout@v4

      - name: Delete Tonomy-Contracts directory
        run: rm -rf ./Tonomy-Contracts

      - name: Get Tonomy-Contracts directory from artifacts
        uses: actions/download-artifact@v4
        with:
          name: Tonomy-Contracts
          path: ./Tonomy-Contracts

      - name: Enable Corepack before setting up Node
        run: corepack enable

      - name: Build container
        uses: actions/setup-node@v4
        with:
          node-version: 22.3.0
          cache: yarn
      - name: Install deps before copying ABIs
        run: yarn install --immutable
      - run: ./copy-contract-abis.sh
      - run: cd Tonomy-Communication && git checkout $GIT_BRANCH && git pull && cd ../
      - run: docker build -t tonomy/communication:local -f test/Dockerfile.communication .

      - name: Save Communication service Docker image as artifact
        run: |
          docker save tonomy/communication:local -o communication-image.tar
          gzip communication-image.tar

      - name: Upload Communication service Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: communication-docker-image
          path: communication-image.tar.gz

  integration-test:
    name: Run integration and governance tests
    needs: compile-contracts
    runs-on: ubuntu-latest
    env:
      TONOMY_OPS_PRIVATE_KEY: PVT_K1_24kG9VcMk3VkkgY4hh42X262AWV18YcPjBTd2Hox4YWoP8vRTU
      TONOMY_BOARD_PUBLIC_KEYS: '{"keys":["PUB_K1_81aU18Y3RdyFf2WY4Wy7g7fvG9M9d7hmY4rhNFeXouYYPjExua","PUB_K1_5HWprCobEy8LiYUpfVmh8BdGDb8ANPc8rhBhtNqhvXnuxpyCaq","PUB_K1_5VLYVhqfe7oh8TW2i6Nw251wbpoZ4p15DV7udqDjiaKnryx9YU"]}'
      TONOMY_TEST_ACCOUNTS_PASSPHRASE: "above day fever lemon piano sport"
      ETHEREUM_PRIVATE_KEY: "0xdf57089febbacf7ba0bc227dafbffa9fc08a93fdc68e1e42411a14efcf23656e"
    services:
      blockchain:
        image: tonomy/blockchain:initialized-development
        ports:
          - 8888:8888

    steps:
      - uses: actions/checkout@v4

      - name: Delete Tonomy-Contracts directory
        run: rm -rf ./Tonomy-Contracts

      - name: Get Tonomy-Contracts directory from artifacts
        uses: actions/download-artifact@v4
        with:
          name: Tonomy-Contracts
          path: ./Tonomy-Contracts

      - name: Enable Corepack before setting up Node
        run: corepack enable
      
      - name: Install and build SDK
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn install --immutable
      - run: yarn run build

      - name: Run hardhat node and Deploy Ethereum contracts
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: git submodule update --init Ethereum-token
      - run: |
          cd Ethereum-token
          git checkout $GIT_BRANCH_ETHEREUM
          git pull
          yarn install --immutable
          npx pm2 start yarn --name "hardhat" -- run node
      - run: sleep 2
      - run: npx pm2 logs --lines 50 --nostream hardhat
      - run: |
          cd Ethereum-token
          DEPLOY_OUTPUT=$(yarn run deploy --network localhost)
          echo "$DEPLOY_OUTPUT"
          BASE_TOKEN_ADDRESS=$(echo "$DEPLOY_OUTPUT" | grep "Proxy contract:" | awk '{print $3}')
          echo "Base Token Address: $BASE_TOKEN_ADDRESS"
          echo "BASE_TOKEN_ADDRESS=$BASE_TOKEN_ADDRESS" >> $GITHUB_ENV

      - name: Run communication service
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: git submodule update --init Tonomy-Communication
      - run: npm install -g pm2
      - run: |
          cd Tonomy-Communication
          git checkout $GIT_BRANCH_COMMUNICATION
          git pull
          yarn install --immutable
          yarn link ../
          yarn run build
          BLOCKCHAIN_URL=http://localhost:8888 npx pm2 start yarn --name "communication" -- run start:prod
      - run: sleep 2
      - run: npx pm2 logs --lines 50 --nostream communication
      
      - name: Bootstrap blockchain
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn run cli bootstrap

      - name: Run integration and governance tests
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn run test:integration
      - run: yarn run test:governance
